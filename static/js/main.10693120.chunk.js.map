{"version":3,"sources":["Components/JoinPage.js","Components/ConnectionsPage.js","Components/startPage.js","App.js","reportWebVitals.js","index.js"],"names":["JoinPage","setJoin","useContext","UsersContext","UsersList","setUsersList","useState","Add","setAdd","sessionStorage","setItem","JSON","stringify","className","htmlFor","id","onBlur","e","preventDefault","Object","keys","includes","target","value","alert","HandleNameChange","placeholder","default","map","user","onClick","nameInput","document","getElementById","newUserName","SelectionInput","newUserFriend","newUserFriend_List","newUsersList","HandleAdd","style","color","ConnectionsPage","setConnections","Check","setCheck","DFS","start","end","shortest","path","newPath","node","length","selector1","selector2","connect","newCheck","Person1","Person2","result","i","fontWeight","slice","React","createContext","StartPage","getItem","IntialUsersList","parse","Join","connections","Joinclick","ConnectionsClick","Provider","src","alt","App","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.10693120.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport './JoinPage.css'\r\nimport {UsersContext} from './startPage'\r\n\r\nexport const JoinPage = ({setJoin}) => {\r\n    const [UsersList,setUsersList] = useContext(UsersContext)\r\n    const [Add, setAdd] = useState(false)\r\n    const HandleNameChange = (e)=>{\r\n        e.preventDefault()\r\n        if(Object.keys(UsersList).includes(e.target.value)===true){\r\n            alert(\"Name already exists\")\r\n        }\r\n    }\r\n    const HandleAdd = (e)=>{\r\n        e.preventDefault()\r\n        const nameInput=document.getElementById(\"name_input\")\r\n        const newUserName = nameInput.value\r\n        if(Object.keys(UsersList).includes(newUserName)===true || newUserName===\"\"){\r\n            alert(\"You have not entered or Name \" + newUserName + \" already exists, change the name and try again\")\r\n        }\r\n        else{\r\n            const SelectionInput=document.getElementById(\"Selection\")\r\n            const newUserFriend= SelectionInput.value\r\n            if (Object.keys(UsersList).includes(newUserFriend)===true){\r\n                const newUserFriend_List=[...UsersList[newUserFriend],newUserName]\r\n                const newUsersList={...UsersList}\r\n                newUsersList[newUserName]=[newUserFriend]\r\n                newUsersList[newUserFriend]=newUserFriend_List\r\n                setUsersList(newUsersList)\r\n                nameInput.value=\"\"\r\n                SelectionInput.value=null\r\n                setAdd(true)\r\n            }\r\n            else{\r\n                alert(\"Select your friend to continue\")\r\n            }\r\n        }\r\n    }\r\n    const HandleRevertHome = ()=>{\r\n        setAdd(false)\r\n        setJoin(false)\r\n    }\r\n    sessionStorage.setItem(\"UsersList\",JSON.stringify(UsersList))\r\n    if (Add===false){\r\n        return (\r\n            <div className=\"buttons-container\">\r\n                <div className=\"button-box\">\r\n                    <p className=\"heading\">Join</p>\r\n                    <form>\r\n                        <label htmlFor=\"name_input\">Name </label>\r\n                        <input id=\"name_input\" onBlur={(e)=>HandleNameChange(e)} placeholder=\"Enter your name\"/><br/>\r\n                        <br/>\r\n                        <label htmlFor=\"Selection\">Reffered By </label>\r\n                        <select id=\"Selection\">\r\n                            <option default value=\"-- select your friend --\"> -- select your friend -- </option>\r\n                            {Object.keys(UsersList).map(user=>(\r\n                                <option value={user} placeholder=\"Select your friend\">{user}</option>\r\n                            ))}\r\n                        </select><br/>\r\n                        <br/>\r\n                        <button onClick={(e)=>HandleAdd(e)} className=\"buttons\">Add</button>\r\n                        <button onClick={()=>setJoin(false)} className=\"buttons\">Cancel</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"button-box1\">\r\n                    <p>You can join in ABC community only if you already have a friend in our community, To join enter your name, select your friend who reffered you and click Add button.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"Joinedbox\">\r\n                <p style={{color:'green'}}>You are successfully joined in ABC community</p>\r\n                <button onClick={HandleRevertHome} className=\"Hbutton\">Home</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useContext, useState} from 'react'\r\nimport './ConnectionsPage.css'\r\nimport {UsersContext} from './startPage'\r\n\r\nexport const ConnectionsPage = ({setConnections}) => {\r\n    const [UsersList,setUsersList] = useContext(UsersContext)\r\n    const [Check,setCheck] = useState([false])\r\n    const DFS=(start,end,shortest=null,path=[])=>{\r\n        path=[...path,start]\r\n        if (start===end){\r\n            return path\r\n        }\r\n        for (var node of UsersList[start]){\r\n            if (path.includes(node)===false){\r\n                var newPath\r\n                if (shortest===null || path.length<shortest.length){\r\n                    newPath=DFS(node,end,shortest,path)\r\n                }\r\n                if (newPath!==null){\r\n                    shortest=[...newPath]\r\n                }\r\n            }\r\n        }\r\n        return shortest\r\n    }\r\n    const HandleSeeConnection=()=>{\r\n        const selector1 = document.getElementById(\"Selection1\")\r\n        const selector2 = document.getElementById(\"Selection2\")\r\n        if (Object.keys(UsersList).includes(selector1.value)===false || Object.keys(UsersList).includes(selector2.value)===false){\r\n            alert(\"Select both the fields Person 1 and Person 2\")\r\n        }\r\n        else if(selector1.value===selector2.value){\r\n            alert(\"Person 1 and Person 2 cannot be same\")\r\n        }\r\n        else{\r\n            const connect=DFS(selector1.value,selector2.value)\r\n            const newCheck=[true,...connect]\r\n            setCheck(newCheck)\r\n        }\r\n    }\r\n    const HandleRevertHome = ()=>{\r\n        setCheck([false])\r\n        setConnections(false)\r\n    }\r\n\r\n    if (Check[0]===false){\r\n        return (\r\n            <div className=\"buttons-container\">\r\n                <div className=\"button-box\">\r\n                    <p className=\"heading\">See how connected?</p>\r\n                    <div className=\"selectionbox\">\r\n                        <label htmlFor=\"Selection1\">Person 1 </label>\r\n                        <select id=\"Selection1\">\r\n                            <option default value=\"-- select one --\"> -- select one -- </option>\r\n                            {Object.keys(UsersList).map(user=>(\r\n                                <option value={user} placeholder=\"Select your friend\">{user}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"selectionbox\">\r\n                        <label htmlFor=\"Selection2\">Person 2 </label>\r\n                        <select id=\"Selection2\">\r\n                            <option default value=\"-- select one --\"> -- select one -- </option>\r\n                            {Object.keys(UsersList).map(user=>(\r\n                                <option value={user} placeholder=\"Select your friend\">{user}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <button onClick={HandleSeeConnection} className=\"buttons\">see connection</button>\r\n                    <button onClick={()=>setConnections(false)} className=\"buttons\">Cancel</button>\r\n                </div>\r\n                <div className=\"button-box1\">\r\n                    <p>Six degrees of separation is the idea that all people are six or fewer social connections away from each other, Similarly to view how two persons are connected in our ABC community, select any two persons and hit see connection</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        const Person1 = document.getElementById(\"Selection1\").value\r\n        const Person2 = document.getElementById(\"Selection2\").value\r\n        var result=\"\"\r\n        for (var i=1;i<Check.length;i++){\r\n            result=result+Check[i]+\" => \"\r\n        }\r\n        return (\r\n            <div className=\"Joinedbox\">\r\n                <p>{Person1+\" and \"+Person2+\" are connected as : \"}</p>\r\n                <p style={{color:'green',fontWeight:'bold'}}>{result.slice(0,-3)}</p>\r\n                <button onClick={HandleRevertHome} className=\"Hbutton\">Home</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{useState} from 'react'\r\nimport './startPage.css'\r\nimport { JoinPage } from './JoinPage'\r\nimport {ConnectionsPage} from './ConnectionsPage'\r\n\r\nexport const UsersContext=React.createContext()\r\nexport const StartPage = () => {\r\n    const dummyData={\r\n        \"rahul\":[\"sai\",\"charan\"],\r\n        \"sai\":[\"kiran\",\"dhruv\",\"rahul\"],\r\n        \"kiran\":[\"sai\"],\r\n        \"dhruv\":[\"sai\"],\r\n        \"charan\":[\"rahul\"]\r\n    }\r\n    if (sessionStorage.getItem(\"UsersList\")===null){\r\n        sessionStorage.setItem(\"UsersList\",JSON.stringify(dummyData))\r\n    }\r\n    const IntialUsersList = JSON.parse(sessionStorage.getItem(\"UsersList\"))\r\n    const [UsersList,setUsersList] = useState(IntialUsersList)\r\n    const [Join, setJoin] = useState(false)\r\n    const [connections, setConnections] = useState(false)\r\n    const Joinclick=()=>{\r\n        setJoin(true)\r\n    }\r\n    const ConnectionsClick=()=>{\r\n        setConnections(true)\r\n    }\r\n    const Display = ()=>{\r\n        if (Join===false && connections===false){\r\n            return(\r\n                <div className=\"buttons-container\">\r\n                    <div className=\"button-box\">\r\n                        <p className=\"heading\">Join</p>\r\n                        <p>You can join in ABC community only if you already have a friend in our community by cicking Join button below</p>\r\n                        <button onClick={Joinclick} className=\"buttons\">Join</button>\r\n                    </div>\r\n                    <div className=\"button-box\">\r\n                        <p className=\"heading\">See how connected?</p>\r\n                        <p>Six degrees of separation is the idea that all people are six or fewer social connections away from each other, Similarly to view how to persons are connected in our ABC community, hit see connections button</p>\r\n                        <button onClick={ConnectionsClick} className=\"buttons\">see connections</button>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        else if (Join===true && connections===false){\r\n            return <JoinPage setJoin={setJoin}></JoinPage>\r\n        }\r\n        else{\r\n            return <ConnectionsPage setConnections={setConnections}></ConnectionsPage>\r\n        }\r\n    }\r\n    return (\r\n        <UsersContext.Provider value={[UsersList,setUsersList]}>\r\n            <div className=\"Main-container\">\r\n                <div className=\"Introduction-container\">\r\n                    <p className=\"Mheading\">Welcome to ABC community <br/> This is a platform for connecting friends.</p>\r\n                    {Display()}\r\n                </div>\r\n                <img className=\"image\" src=\"images/startPage1.jpg\" alt=\"LOGO\"/>\r\n            </div>\r\n        </UsersContext.Provider>\r\n    )\r\n}\r\n","import './App.css';\nimport {StartPage}  from './Components/startPage.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 style={{textAlign:'center'}}>ABC community</h1>\n      <StartPage></StartPage>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}